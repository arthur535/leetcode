/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        ListNode* tail = head;
        if(!head || !head->next){
            return head;
        }
    int size = 0;
    ListNode* tmp = head;
    while (tmp) {
        size++;
        tmp = tmp -> next;
    }
        while(tail->next){
            tail = tail->next;
        }
        ListNode* tailminus = head;
        while(tailminus->next != tail){
            tailminus = tailminus->next;
        }
        for(int i = 0; i < k%size; ++i){
            tail->next = head;
            tailminus->next = nullptr;
            head = tail;
            tail = tailminus;
            tailminus = head;
            while(tailminus->next != tail){
            tailminus = tailminus->next;
            }
        }
        return head;
    }
};
